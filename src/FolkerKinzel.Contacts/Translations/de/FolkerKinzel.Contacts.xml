<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FolkerKinzel.Contacts</name>
    </assembly>
    <members>
        <member name="T:FolkerKinzel.Contacts.Address">
            <summary>
            Kapselt Adressdaten.
            </summary>
        </member>
        <member name="T:FolkerKinzel.Contacts.Address.Prop">
            <summary>
            Benannte Konstanten, um die Properties eines <see cref="T:FolkerKinzel.Contacts.Address"/>-Objekts im Indexer zu adressieren.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.#ctor">
            <summary>
            Initialisiert eine leere Instanz der <see cref="T:FolkerKinzel.Contacts.Address"/>-Klasse.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.#ctor(FolkerKinzel.Contacts.Address)">
            <summary>
            Kopierkonstruktor: Erstellt eine tiefe Kopie des Objekts und aller seiner Unterobjekte.
            </summary>
            <param name="source">Quellobjekt, dessen Inhalt kopiert wird.</param>
        </member>
        <member name="P:FolkerKinzel.Contacts.Address.Street">
            <summary>
            Straße (+ Hausnummer)
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Address.City">
            <summary>
            Ort
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Address.PostalCode">
            <summary>
            Postleitzahl
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Address.State">
            <summary>
            Bundesland
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Address.Country">
            <summary>
            Staat
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.ToString">
            <summary>
            Erstellt eine <see cref="T:System.String"/>-Repräsentation des <see cref="T:FolkerKinzel.Contacts.Address"/>-Objekts.
            </summary>
            <returns>Der Inhalt des <see cref="T:FolkerKinzel.Contacts.Address"/>-Objekts als <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.op_Equality(FolkerKinzel.Contacts.Address,FolkerKinzel.Contacts.Address)">
            <summary>
            Überladung des == Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.Address"/>-Objekte, um zu überprüfen, ob sie gleich sind.
            </remarks>
            <param name="address1">Linker Operand.</param>
            <param name="address2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="address1"/> und <paramref name="address2"/> gleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.op_Inequality(FolkerKinzel.Contacts.Address,FolkerKinzel.Contacts.Address)">
            <summary>
            Überladung des != Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.Address"/>-Objekte, um zu überprüfen, ob sie ungleich sind.
            </remarks>
            <param name="address1">Linker Operand.</param>
            <param name="address2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="address1"/> und <paramref name="address2"/> ungleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.DescribesForeignIdentity(FolkerKinzel.Contacts.Address)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.SupplementWith(FolkerKinzel.Contacts.Address)">
            <inheritdoc/>
        </member>
        <member name="P:FolkerKinzel.Contacts.Address.IsEmpty">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.Clean">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.Clone">
            <summary>
            Erstellt eine tiefe Kopie des Objekts.
            </summary>
            <returns>Eine tiefe Kopie des Objekts.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.Equals(FolkerKinzel.Contacts.Address)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.CompareBoolean(FolkerKinzel.Contacts.Address)">
            <summary>
            Vergleicht die Eigenschaften mit denen eines anderen <see cref="T:FolkerKinzel.Contacts.Address"/>-Objekts.
            </summary>
            <param name="other">Das <see cref="T:FolkerKinzel.Contacts.Address"/>-Objekt, mit dem verglichen wird.</param>
            <returns><c>true</c>, wenn alle Eigenschaften übereinstimmen.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Address.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FolkerKinzel.Contacts.Contact">
            <summary>
            Einfaches Datenmodell zum Speichern von Kontaktdaten.
            </summary>
            <example>
            <para>Initialisieren von <see cref="T:FolkerKinzel.Contacts.Contact"/>-Objekten:</para>
            <code language="cs" source="..\Examples\ContactExample.cs" />
            </example>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.#ctor">
            <summary>
            Initialisiert eine leere Instanz der <see cref="T:FolkerKinzel.Contacts.Contact"/>-Klasse.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.#ctor(FolkerKinzel.Contacts.Contact)">
            <summary>
            Kopierkonstruktor: Erstellt eine tiefe Kopie des Objekts und aller seiner Unterobjekte.
            </summary>
            <param name="source">Quellobjekt, dessen Inhalt kopiert wird.</param>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.DisplayName">
            <summary>
            Anzeigename
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.Person">
            <summary>
            Personenbezogene Daten
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.EmailAddresses">
            <summary>
            E-Mail-Adressen
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.InstantMessengerHandles">
            <summary>
            Instant-Messenger-Handles
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.PhoneNumbers">
            <summary>
            Telefonnummern
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.AddressHome">
            <summary>
            Postanschrift (privat)
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.Work">
            <summary>
            Berufliche Daten
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.WebPagePersonal">
            <summary>
            Private Homepage
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.WebPageWork">
            <summary>
            Firmenwebseite
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.Comment">
            <summary>
            Kommentar
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.TimeStamp">
            <summary>
            Letzte Änderung
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Contact.IsEmpty">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.Clean">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.Clone">
            <summary>
            Erstellt eine tiefe Kopie des Objekts.
            </summary>
            <returns>Eine tiefe Kopie des Objekts.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.System#Collections#Generic#IEnumerable{FolkerKinzel#Contacts#Contact}#GetEnumerator">
            <summary>
            Gibt einen Enumerator zurück, der die ausführende Instanz der <see cref="T:FolkerKinzel.Contacts.Contact"/>-Klasse
            zurückgibt.
            </summary>
            <returns>Ein Enumerator, der die ausführende Instanz der <see cref="T:FolkerKinzel.Contacts.Contact"/>-Klasse
            zurückgibt.</returns>
            <remarks>
            Diese Implementierung ermöglicht es, ein einzelnes <see cref="T:FolkerKinzel.Contacts.Contact"/>-Objekt als Argument an einen Methodenparameter vom Typ
            <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable&lt;Contact&gt;</see> zu übergeben.
            </remarks>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gibt einen Enumerator zurück, der die ausführende Instanz der <see cref="T:FolkerKinzel.Contacts.Contact"/>-Klasse
            zurückgibt.
            </summary>
            <returns>Ein Enumerator, der die ausführende Instanz der <see cref="T:FolkerKinzel.Contacts.Contact"/>-Klasse
            zurückgibt.</returns>
            <remarks>
            Diese Implementierung ermöglicht es, ein einzelnes <see cref="T:FolkerKinzel.Contacts.Contact"/>-Objekt als Argument an einen Methodenparameter vom Typ
            <see cref="T:System.Collections.IEnumerable"/> zu übergeben.
            </remarks>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.Equals(FolkerKinzel.Contacts.Contact)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.CompareBoolean(FolkerKinzel.Contacts.Contact)">
            <summary>
            Vergleicht die Eigenschaften mit denen eines anderen <see cref="T:FolkerKinzel.Contacts.Contact"/>-Objekts.
            </summary>
            <param name="other">Das <see cref="T:FolkerKinzel.Contacts.Contact"/>-Objekt, mit dem verglichen wird.</param>
            <returns><c>true</c>, wenn alle Eigenschaften übereinstimmen.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.DescribesForeignIdentity(FolkerKinzel.Contacts.Contact)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.SupplementWith(FolkerKinzel.Contacts.Contact)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.ToString">
            <summary>
            Erstellt eine <see cref="T:System.String"/>-Repräsentation des <see cref="T:FolkerKinzel.Contacts.Contact"/>-Objekts.
            </summary>
            <returns>Der Inhalt des <see cref="T:FolkerKinzel.Contacts.Contact"/>-Objekts als <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.op_Equality(FolkerKinzel.Contacts.Contact,FolkerKinzel.Contacts.Contact)">
            <summary>
            Überladung des == Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.Contact"/>-Objekte, um zu überprüfen, ob sie gleich sind.
            </remarks>
            <param name="contact1">Linker Operand.</param>
            <param name="contact2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="contact1"/> und <paramref name="contact2"/> gleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Contact.op_Inequality(FolkerKinzel.Contacts.Contact,FolkerKinzel.Contacts.Contact)">
            <summary>
            Überladung des != Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.Contact"/>-Objekte, um zu überprüfen, ob sie ungleich sind.
            </remarks>
            <param name="contact1">Linker Operand.</param>
            <param name="contact2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="contact1"/> und <paramref name="contact2"/> ungleich sind.</returns>
        </member>
        <member name="T:FolkerKinzel.Contacts.ICleanable">
            <summary>
            Interface, das das implementierende Objekt befähigt, sich selbst von Datenmüll zu reinigen.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.ICleanable.Clean">
            <summary>
            Reinigt die im Objekt gespeicherten Daten: Entfernt z.B. leere Unterobjekte oder überflüssige Leerzeichen.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.ICleanable.IsEmpty">
            <summary>
            Gibt <c>true</c> zurück, wenn das Objekt keine verwertbaren Daten enthält, andernfalls <c>false</c>.
            </summary>
        </member>
        <member name="T:FolkerKinzel.Contacts.MergeableObject`1">
            <summary>
            Abstrakte Basisklasse, die Methoden bereitstellt, die Instanzen abgeleiteter Klassen dazu befähigt, ihre Daten miteinander
            zu verschmelzen.
            </summary>
            <typeparam name="T">Generischer Typparameter, der stellvertretend für eine abgeleitete Klasse steht.</typeparam>
        </member>
        <member name="P:FolkerKinzel.Contacts.MergeableObject`1.IsEmpty">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.MergeableObject`1.Clean">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.MergeableObject`1.IsMergeableWith(`0)">
            <summary>
            Untersucht, ob einer Verschmelzung der Daten aus <paramref name="other"/> mit denen der aktuellen
            Instanz nichts entgegen steht.
            </summary>
            <param name="other">Ein anderes <see cref="T:FolkerKinzel.Contacts.MergeableObject`1"/> oder <c>null</c>.</param>
            <returns><c>true</c>, wenn einer Verschmelzung mit <paramref name="other"/> nichts entgegen steht,
            andernfalls <c>false</c>.</returns>
            <remarks>
            <para>
             Wenn <paramref name="other"/>&#160;<c>null</c> oder <see cref="P:FolkerKinzel.Contacts.MergeableObject`1.IsEmpty"/> ist,
             gibt die Methode <c>true</c> zurück. Wenn die Eigenschaft <see cref="P:FolkerKinzel.Contacts.MergeableObject`1.IsEmpty"/> der aktuellen Instanz
             <c>true</c> zurückgibt, steht einer Verschmelzung der Daten aus <paramref name="other"/> mit denen der aktuellen
            Instanz ebenfalls nichts entgegen. Deshalb gibt die Methode auch in diesem Fall <c>true</c> zurück.
            </para>
            <para>
            Die Methode kann geeignete Kandidaten für eine Verschmelzung ihrer Daten finden ("Doubletten"); sie
            kann aber nicht feststellen, ob die Zusammenführung der Daten sinnvoll ist. Es wäre eine gute Praxis, die Benutzer der
            Anwendung darüber entscheiden zu lassen.
            </para>
            </remarks>
        </member>
        <member name="M:FolkerKinzel.Contacts.MergeableObject`1.AreMergeable(`0,`0)">
            <summary>
            Untersucht, ob einer Verschmelzung der Daten von <paramref name="mergeable1"/> und <paramref name="mergeable2"/> nichts entgegen steht.
            </summary>
            <param name="mergeable1">Das erste zu untersuchende Objekt.</param>
            <param name="mergeable2">Das zweite zu untersuchende Objekt.</param>
            <returns><c>true</c>, wenn einer Verschmelzung von <paramref name="mergeable1"/> und <paramref name="mergeable2"/> nichts entgegen steht,
            andernfalls <c>false</c>.</returns>
            <remarks>
            <para>
             Wenn eines der zu untersuchenden Objekte <c>null</c> oder <see cref="P:FolkerKinzel.Contacts.MergeableObject`1.IsEmpty"/> ist,
             gibt die Methode <c>true</c> zurück.
            </para>
            <para>
            Die Methode kann geeignete Kandidaten für eine Verschmelzung ihrer Daten finden ("Doubletten"); sie
            kann aber nicht feststellen, ob die Zusammenführung der Daten sinnvoll ist. Es wäre eine gute Praxis, die Benutzer der
            Anwendung darüber entscheiden zu lassen.
            </para>
            </remarks>
        </member>
        <member name="M:FolkerKinzel.Contacts.MergeableObject`1.Merge(`0)">
            <summary>
            Ergänzt die ausführende Instanz mit den Daten von <paramref name="source"/>. Es werden dabei in der aktuellen Instanz keine vorhandenen Daten
            überschrieben.
            </summary>
            <param name="source">Das Quellobjekt, mit dessen Daten die ausführenden Instanz vervollständigt wird.</param>
            <returns>Eine Referenz auf die ausführende Instanz, um Aufrufe verketten zu können.</returns>
            <remarks>
            <para>
            Die Methode führt keinerlei Überprüfung durch, ob die Ergänzung der Daten der aktuellen Instanz mit denen 
            von <paramref name="source"/> sinnvoll ist. Prüfen Sie dies vorher mit der Instanzmethode <see cref="M:FolkerKinzel.Contacts.MergeableObject`1.IsMergeableWith(`0)"/> 
            oder der statischen Methode <see cref="M:FolkerKinzel.Contacts.MergeableObject`1.AreMergeable(`0,`0)"/> und lassen Sie sich
            das Ergebnis der Prüfung möglichst von den Benutzern der Anwendung bestätigen.
            </para>
            <para>
            Wenn <paramref name="source"/>&#160;<c>null</c> oder <see cref="P:FolkerKinzel.Contacts.MergeableObject`1.IsEmpty"/> ist, werden keine Daten kopiert.
            </para>
            <para>
            Bei der Verschmelzung zweier <see cref="T:FolkerKinzel.Contacts.MergeableObject`1"/>-Instanzen ist das Ergebnis davon abhängig, auf welcher der beiden 
            Instanzen die Methode aufgerufen wird. Die Erhaltung der Daten der Instanz, auf der die Methode aufgerufen wird, hat Priorität.
            Es liegt in der Verantwortung der ausführenden Anwendung, die Methode auf der geeigneteren der beiden Instanzen 
            aufzurufen.
            </para>
            </remarks>
        </member>
        <member name="M:FolkerKinzel.Contacts.MergeableObject`1.SupplementWith(`0)">
            <summary>
            Ergänzt die ausführende Instanz mit den Daten von <paramref name="source"/>, ohne vorhandene Daten dabei zu überschreiben.
            </summary>
            <param name="source">Das Quellobjekt. (Nie <c>null</c> oder <see cref="P:FolkerKinzel.Contacts.MergeableObject`1.IsEmpty"/>.)</param>
            <remarks>
            <note type="inherit">
            Beim Überschreiben der Methode in erbenden Klassen muss das Versprechen eingehalten werden, dass die Methode keine vorhandenen
            Daten überschreibt!
            </note>
            </remarks>
        </member>
        <member name="M:FolkerKinzel.Contacts.MergeableObject`1.DescribesForeignIdentity(`0)">
            <summary>
            Untersucht <paramref name="other"/> daraufhin, ob es eine fremde Identität beschreibt, und
            deshalb nicht mit der aktuellen Instanz verschmolzen werden kann.
            </summary>
            <param name="other">Das zu untersuchende Objekt. (Nie <c>null</c> oder <see cref="P:FolkerKinzel.Contacts.MergeableObject`1.IsEmpty"/>.)</param>
            <returns>Die Methode darf nur dann <c>true</c> zurückgeben, wenn die Werte der Eigenschaften von <paramref name="other"/>
            eine Verschmelzung mit der aktuellen Instanz unmöglich machen, andernfalls <c>false</c>.</returns>
        </member>
        <member name="T:FolkerKinzel.Contacts.Name">
            <summary>
            Kapselt Informationen über den Namen einer Person.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.#ctor">
            <summary>
            Initialisiert ein leeres <see cref="T:FolkerKinzel.Contacts.Name"/>-Objekt.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.#ctor(FolkerKinzel.Contacts.Name)">
            <summary>
            Kopierkonstruktor: Erstellt eine tiefe Kopie des Objekts.
            </summary>
            <param name="other">Das zu kopierende <see cref="T:FolkerKinzel.Contacts.Name"/>-Objekt.</param>
        </member>
        <member name="P:FolkerKinzel.Contacts.Name.LastName">
            <summary>
            Familienname
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Name.FirstName">
            <summary>
            Vorname
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Name.MiddleName">
            <summary>
            Zweiter Vorname
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Name.Prefix">
            <summary>
            Namenspräfix (z.B. "Prof. Dr.")
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Name.Suffix">
            <summary>
            Namenssuffix (z.B. "jr.")
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.ToString">
            <summary>
            Erstellt eine <see cref="T:System.String"/>-Repräsentation des <see cref="T:FolkerKinzel.Contacts.Name"/>-Objekts.
            </summary>
            <returns>Der Inhalt des <see cref="T:FolkerKinzel.Contacts.Name"/>-Objekts als <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.op_Equality(FolkerKinzel.Contacts.Name,FolkerKinzel.Contacts.Name)">
            <summary>
            Überladung des == Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.Name"/>-Objekte, um festzustellen, ob sie gleich sind.
            </remarks>
            <param name="name1">Linker Operand.</param>
            <param name="name2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="name1"/> und <paramref name="name2"/> gleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.op_Inequality(FolkerKinzel.Contacts.Name,FolkerKinzel.Contacts.Name)">
            <summary>
            Überladung des != Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.Name"/>-Objekte, um festzustellen, ob sie ungleich sind.
            </remarks>
            <param name="name1">Linker Operand.</param>
            <param name="name2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="name1"/> und <paramref name="name2"/> ungleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.DescribesForeignIdentity(FolkerKinzel.Contacts.Name)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.SupplementWith(FolkerKinzel.Contacts.Name)">
            <inheritdoc/>
        </member>
        <member name="P:FolkerKinzel.Contacts.Name.IsEmpty">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.Clean">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.Clone">
            <summary>
            Erstellt eine tiefe Kopie des Objekts.
            </summary>
            <returns>Eine tiefe Kopie des Objekts.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.Equals(FolkerKinzel.Contacts.Name)">
            <inheritdoc />
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.CompareBoolean(FolkerKinzel.Contacts.Name)">
            <summary>
            Vergleicht die Eigenschaften mit denen eines anderen <see cref="T:FolkerKinzel.Contacts.Name"/>-Objekts.
            </summary>
            <param name="other">Das <see cref="T:FolkerKinzel.Contacts.Name"/>-Objekt, mit dem verglichen wird.</param>
            <returns><c>true</c>, wenn alle Eigenschaften übereinstimmen.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Name.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FolkerKinzel.Contacts.Person">
            <summary>
            Kapselt personenbezogene Daten.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.#ctor">
            <summary>
            Initialisiert ein leeres <see cref="T:FolkerKinzel.Contacts.Person"/>-Objekt.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.#ctor(FolkerKinzel.Contacts.Person)">
            <summary>
            Kopierkonstruktor: Erstellt eine tiefe Kopie des Objekts und aller seiner Unterobjekte.
            </summary>
            <param name="source">Quellobjekt, dessen Inhalt kopiert wird.</param>
        </member>
        <member name="P:FolkerKinzel.Contacts.Person.Name">
            <summary>
            Name der Person
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Person.NickName">
            <summary>
            Rufname
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Person.Gender">
            <summary>
            Geschlecht
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Person.BirthDay">
            <summary>
            Geburtstag
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Person.Spouse">
            <summary>
            Name des Ehepartners
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Person.Anniversary">
            <summary>
            Hochzeitstag
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.ToString">
            <summary>
            Erstellt eine <see cref="T:System.String"/>-Repräsentation des <see cref="T:FolkerKinzel.Contacts.Person"/>-Objekts.
            </summary>
            <returns>Der Inhalt des <see cref="T:FolkerKinzel.Contacts.Person"/>-Objekts als <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.op_Equality(FolkerKinzel.Contacts.Person,FolkerKinzel.Contacts.Person)">
            <summary>
            Überladung des == Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.Person"/>-Objekte, um zu überprüfen, ob sie gleich sind.
            </remarks>
            <param name="person1">Linker Operand.</param>
            <param name="person2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="person1"/> und <paramref name="person2"/> gleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.op_Inequality(FolkerKinzel.Contacts.Person,FolkerKinzel.Contacts.Person)">
            <summary>
            Überladung des != Operators.
            </summary>
            <remarks>
            Vergleicht zwei<see cref="T:FolkerKinzel.Contacts.Person"/>-Objekte, um zu überprüfen, ob sie ungleich sind.
            </remarks>
            <param name="person1">Linker Operand.</param>
            <param name="person2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="person1"/> und <paramref name="person2"/> ungleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.DescribesForeignIdentity(FolkerKinzel.Contacts.Person)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.SupplementWith(FolkerKinzel.Contacts.Person)">
            <inheritdoc/>
        </member>
        <member name="P:FolkerKinzel.Contacts.Person.IsEmpty">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.Clean">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.Clone">
            <summary>
            Erstellt eine tiefe Kopie des Objekts.
            </summary>
            <returns>Eine tiefe Kopie des Objekts.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.Equals(FolkerKinzel.Contacts.Person)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.CompareBoolean(FolkerKinzel.Contacts.Person)">
            <summary>
            Vergleicht die Eigenschaften mit denen eines anderen <see cref="T:FolkerKinzel.Contacts.Person"/>-Objekts.
            </summary>
            <param name="other">Das <see cref="T:FolkerKinzel.Contacts.Person"/>-Objekt, mit dem verglichen wird.</param>
            <returns><c>true</c>, wenn alle Eigenschaften übereinstimmen.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Person.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FolkerKinzel.Contacts.PhoneNumber">
            <summary>
            Kapselt Informationen über eine Telefonnummer.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.#ctor">
            <summary>
            Initialisiert ein leeres <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekt.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initialisiert ein <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekt mit der zu kapselnden Telefonnummer
            und optionalen Flags, die diese näher beschreiben.
            </summary>
            <param name="value">Die Telefonnummer.</param>
            <param name="isWork"><c>true</c> gibt an, dass es sich um eine dienstliche Telefonnummer handelt.</param>
            <param name="isMobile"><c>true</c> gibt an, dass es sich um eine Mobilfunknummer handelt.</param>
            <param name="isFax"><c>true</c> gibt an, dass die Nummer für den Fax-Empfang geeignet ist.</param>
        </member>
        <member name="P:FolkerKinzel.Contacts.PhoneNumber.Value">
            <summary>
            Telefonnummer
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.PhoneNumber.IsWork">
            <summary>
            <c>true</c> gibt an, dass es sich bei <see cref="P:FolkerKinzel.Contacts.PhoneNumber.Value"/> um eine dienstliche Telefonnummer handelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.PhoneNumber.IsMobile">
            <summary>
            <c>true</c> gibt an, dass es sich bei <see cref="P:FolkerKinzel.Contacts.PhoneNumber.Value"/> um eine Mobilfunknummer handelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.PhoneNumber.IsFax">
            <summary>
            <c>true</c> gibt an, dass <see cref="P:FolkerKinzel.Contacts.PhoneNumber.Value"/> eine Telefonnummer ist, die für den Faxempfang geeignet ist.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.ToString">
            <summary>
            Erstellt eine <see cref="T:System.String"/>-Repräsentation des <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekts.
            </summary>
            <returns>Der Inhalt des <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekts als <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.op_Equality(FolkerKinzel.Contacts.PhoneNumber,FolkerKinzel.Contacts.PhoneNumber)">
            <summary>
            Überladung des == Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekte, um zu überprüfen, ob sie gleich sind.
            </remarks>
            <param name="phone1">Linker Operand.</param>
            <param name="phone2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="phone1"/> und <paramref name="phone2"/> gleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.op_Inequality(FolkerKinzel.Contacts.PhoneNumber,FolkerKinzel.Contacts.PhoneNumber)">
            <summary>
            Überladung des != Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekte, um zu überprüfen, ob sie ungleich sind.
            </remarks>
            <param name="phone1">Linker Operand.</param>
            <param name="phone2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="phone1"/> und <paramref name="phone2"/> ungleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.DescribesForeignIdentity(FolkerKinzel.Contacts.PhoneNumber)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.SupplementWith(FolkerKinzel.Contacts.PhoneNumber)">
            <inheritdoc/>
        </member>
        <member name="P:FolkerKinzel.Contacts.PhoneNumber.IsEmpty">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.Clean">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.System#Collections#Generic#IEnumerable{FolkerKinzel#Contacts#PhoneNumber}#GetEnumerator">
            <summary>
            Gibt einen Enumerator zurück, der die ausführende Instanz der <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Klasse
            zurückgibt.
            </summary>
            <returns>Ein Enumerator, der die ausführende Instanz der <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Klasse
            zurückgibt.</returns>
            <remarks>
            Diese Implementierung ermöglicht es, ein einzelnes <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekt als Argument an einen Methodenparameter vom Typ
            <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable&lt;PhoneNumber&gt;</see> zu übergeben.
            </remarks>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gibt einen Enumerator zurück, der die ausführende Instanz der <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Klasse
            zurückgibt.
            </summary>
            <returns>Ein Enumerator, der die ausführende Instanz der <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Klasse
            zurückgibt.</returns>
            <remarks>
            Diese Implementierung ermöglicht es, ein einzelnes <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekt als Argument an einen Methodenparameter vom Typ
            <see cref="T:System.Collections.IEnumerable"/> zu übergeben.
            </remarks>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.Clone">
            <summary>
            Erstellt eine tiefe Kopie des Objekts.
            </summary>
            <returns>Eine tiefe Kopie des Objekts.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.Equals(FolkerKinzel.Contacts.PhoneNumber)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.CompareBoolean(FolkerKinzel.Contacts.PhoneNumber)">
            <summary>
            Vergleicht die Eigenschaften mit denen eines anderen <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekts.
            </summary>
            <param name="other">Das <see cref="T:FolkerKinzel.Contacts.PhoneNumber"/>-Objekt, mit dem verglichen wird.</param>
            <returns><c>true</c>, wenn alle Eigenschaften übereinstimmen.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.PhoneNumber.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FolkerKinzel.Contacts.Resources.Res">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.AddressHome">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Home Address: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.AddressWork">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Work Address: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Anniversary">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Anniversary: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.BirthDay">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Birthday: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Comment">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Annotation: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Company">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Company: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Department">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Department: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.DisplayName">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Display Name: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.EmailAddresses">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die E-Mails: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Fax">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die fax ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Female">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die female ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Gender">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Gender: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.HomePagePersonal">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Personal Homepage: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.HomePageWork">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Business Homepage: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.InstantMessengers">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Instant Messengers: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Male">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die male ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Name">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Name: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.NickName">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Nickname: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Office">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Office: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Person">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Personal Data: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.PhoneNumbers">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Phone Numbers: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Position">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Position: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Spouse">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Spouse: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.TimeStamp">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Last Changed: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.Work">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Company Data: ähnelt.
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Resources.Res.WorkShort">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die w. ähnelt.
            </summary>
        </member>
        <member name="T:FolkerKinzel.Contacts.Sex">
            <summary>
            Benannte Konstanten für die Geschlechtsangabe.
            </summary>
        </member>
        <member name="F:FolkerKinzel.Contacts.Sex.Unspecified">
            <summary>
            Das Geschlecht ist nicht angegeben.
            </summary>
        </member>
        <member name="F:FolkerKinzel.Contacts.Sex.Female">
            <summary>
            weiblich
            </summary>
        </member>
        <member name="F:FolkerKinzel.Contacts.Sex.Male">
            <summary>
            männlich
            </summary>
        </member>
        <member name="T:FolkerKinzel.Contacts.Work">
            <summary>
            Kapselt Informationen über die Arbeitsstelle einer Person.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.#ctor">
            <summary>
            Initialisiert eine leere Instanz der <see cref="T:FolkerKinzel.Contacts.Work"/>-Klasse.
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.#ctor(FolkerKinzel.Contacts.Work)">
            <summary>
            Kopierkonstruktor: Erstellt eine tiefe Kopie des Objekts und aller seiner Unterobjekte.
            </summary>
            <param name="source">Quellobjekt, dessen Inhalt kopiert wird.</param>
        </member>
        <member name="P:FolkerKinzel.Contacts.Work.Company">
            <summary>
            Name der Firma oder Organisation
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Work.Department">
            <summary>
            Abteilung
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Work.Office">
            <summary>
            Büro
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Work.JobTitle">
            <summary>
            Titel bzw. Position des Mitarbeiters
            </summary>
        </member>
        <member name="P:FolkerKinzel.Contacts.Work.AddressWork">
            <summary>
            Postanschrift der Firma oder Organisation
            </summary>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.ToString">
            <summary>
            Erstellt eine <see cref="T:System.String"/>-Repräsentation des <see cref="T:FolkerKinzel.Contacts.Work"/>-Objekts.
            </summary>
            <returns>Der Inhalt des <see cref="T:FolkerKinzel.Contacts.Work"/>-Objekts als <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.op_Equality(FolkerKinzel.Contacts.Work,FolkerKinzel.Contacts.Work)">
            <summary>
            Überladung des == Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.Work"/>-Objekte, um zu überprüfen, ob sie gleich sind.
            </remarks>
            <param name="work1">Linker Operand.</param>
            <param name="work2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="work1"/> und <paramref name="work2"/> gleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.op_Inequality(FolkerKinzel.Contacts.Work,FolkerKinzel.Contacts.Work)">
            <summary>
            Überladung des != Operators.
            </summary>
            <remarks>
            Vergleicht zwei <see cref="T:FolkerKinzel.Contacts.Work"/>-Objekte, um zu überprüfen, ob sie ungleich sind.
            </remarks>
            <param name="work1">Linker Operand.</param>
            <param name="work2">Rechter Operand.</param>
            <returns><c>true</c>, wenn <paramref name="work1"/> und <paramref name="work2"/> ungleich sind.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.DescribesForeignIdentity(FolkerKinzel.Contacts.Work)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.SupplementWith(FolkerKinzel.Contacts.Work)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.Clean">
            <inheritdoc/>
        </member>
        <member name="P:FolkerKinzel.Contacts.Work.IsEmpty">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.Clone">
            <summary>
            Erstellt eine tiefe Kopie des Objekts.
            </summary>
            <returns>Eine tiefe Kopie des Objekts.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.Equals(FolkerKinzel.Contacts.Work)">
            <inheritdoc/>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.CompareBoolean(FolkerKinzel.Contacts.Work)">
            <summary>
            Vergleicht die Eigenschaften mit denen eines anderen <see cref="T:FolkerKinzel.Contacts.Work"/>-Objekts.
            </summary>
            <param name="other">Das <see cref="T:FolkerKinzel.Contacts.Work"/>-Objekt, mit dem verglichen wird.</param>
            <returns><c>true</c>, wenn alle Eigenschaften übereinstimmen.</returns>
        </member>
        <member name="M:FolkerKinzel.Contacts.Work.GetHashCode">
            <inheritdoc/>
        </member>
    </members>
</doc>
